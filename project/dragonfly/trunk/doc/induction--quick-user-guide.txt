dragonFly - quick user guide
----------------------------

- the important types of classes you will write are controllers, views and models

- controllers
  - all requests first reach a controller
  - a controller is a POJO which implements the Controller marker interface. 
    - the Controller interface just marks a class as a controller, and does not require any methods
  - the controller may have a method for each distint task that it performs
    - the URL syntax to invoke a controller allows specifying which of the controller's methods should be called
      - e.g: http://www.acciente.com/myapp/controller/Signup/Save
    - omitting the method invoke a default (configurable) method  
  - the type of the return value of a controller is significant, each possible type and their meaning is given below:
    - Template: processes and return the text content of the specified template object to the client
    - Text: returns the text contents to the client
    - Image/ImageStream: returns the image contents to the client

- views
  - a view class is a POJO that implements one of the following interfaces (based on the type of view): 
    - Template
    - Image
    - Text
    - ImageStreamer
  - a class, say C1, that implements the Template interface uses one of the integrated template engines
    - when processing the template the only data passed to the template is an instance of the class C1
    - so C1 serves as the bean that defines clearly what data is uses by the associated template
    
- models
  - a model is any user defined class
  - a configurable factory may be provided for each model class
  - declarative control of the lifecyle of each model class
    - application: a model object is created for the life of the application
    - session: a model object is created for each browser session
    - local: a model object is created for each controller invocation
